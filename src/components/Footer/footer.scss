@import '../../scss/variables.scss';
@import '../../scss/mixins.scss';

.g-footer {
  // a regular container is not full-bleed for large screen sizes
  .container-wrap-fullscreen {
    background: $color-grey-ultra-light-2;
  }

  &__a17 { // Make sure footer bump does not wrap.
    white-space: nowrap;
  }

  &__donate {
    .h4 {
      // make the text match the mock
      max-width: 400px;
      margin-bottom: 10px;
    }
  }

  &__details {
    .h2 {
      // bump up from 15px
      font-size: 16px;
      color: $color-grey-light;
      margin-top: 0;
    }
  }

  // Take some padding from the col wrapper
  // to give each stacked col some padding of its own.
  @include breakpoint('small-') {
    .m-block.m-block__columns {
      padding-bottom: 0;

      > .m-block__column {
        padding-bottom: 30px;
      }
    }
  }

  @include stacking-btn-margin-fix();

  .no-margin-top {
    margin-top: 0;
  }
}

// Override default spacing to make distance from p tags the same distance as from links.
.knight-logo {
  padding-bottom: 15px !important;
}

.brand-links {
  display: grid;
  grid-template: 1fr 1fr 1fr/ 1fr;
  margin-top: 20px;

  @include breakpoint('large+') {
    margin-top: 0;
    grid-template: 1fr/ 20% 20% 20%;
  }
}

.footer-detail {
  margin-top: 0;
}


// This class is to keep input width at 100% for mobile.
.input-width {
  @include breakpoint('small-') {
    width: calc(100% - 60px);
  }
}

// This class is to keep input button width at 60px
// and button width for 100% if need be for mobile.
.btn {
  &--icon {
    @include breakpoint('small-') {
      max-width: 60px;
    }
  }

  &--100 {
    @include breakpoint('small-') {
      min-width: 100%;
    }
  }
}

.no-bottom-margin {
  margin-bottom: 0px;
}

@mixin getImageHeight() {
  min-height: 240px;

  @include breakpoint('medium+') {
    min-height: 317px;
  }

  @include breakpoint('large+') {
    min-height: 354px;
  }
}

/* Change a17 event card to match redesign. */
.m-card-event {

  &__media-link {
    @include getImageHeight();

    padding: 0;
  }

  &__media {
    @include getImageHeight();

    padding-bottom: 0;

    // Make empty size same as image image size.
    &:empty {
      padding-bottom: 0;
    }
  }
}